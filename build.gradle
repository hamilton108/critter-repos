apply plugin: 'java'

group = 'hamilton108'

version = '1.2'

configurations {
    aspectjTask
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    mavenCentral()
}

ext.myLibName = "critter-repos-${version}.jar"

dependencies {
    compile project(':oahu')
    compile "junit:junit:$junitVersion"
    compile "log4j:log4j:$log4jVersion"
    compile "org.slf4j:slf4j-api:$slf4jVersion"
    compile "org.mybatis:mybatis:$mybatisVersion"
    compile "org.postgresql:postgresql:$postgresVersion"

    //------------------- Aspectj -------------------
    runtime "org.aspectj:aspectjrt:$aspectjVersion"
    aspectjTask "org.aspectj:aspectjrt:$aspectjVersion"
    aspectjTask "org.aspectj:aspectjweaver:$aspectjVersion"
    aspectjTask "org.aspectj:aspectjtools:$aspectjVersion"
    
    //------------------- test -------------------
    testImplementation "org.junit.jupiter:junit-jupiter-api:$jupiterVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$jupiterVersion"
}

def jarFile = new File("$libsDir/$myLibName")

task copyToParentProject(type: Copy, dependsOn: jar) {
    into parentDist from jarFile
}


//---------------------------- AOP ----------------------------------
task cleanClassesZero(type: Delete) << {
    delete fileTree(project.buildDir.toString() + "/classes0")
}
compileJava {
    //dependsOn cleanClasses0
    def myInPath = project.buildDir.toString() + "/classes0"
    destinationDir = new File(myInPath)

    doLast {
        def mySourceRoots = project.sourceSets.main.java.srcDirs[0].toString() + "/critterrepos/aspects"
        def aopcp = configurations.compile.asPath << ":" << configurations.aspectjTask.asPath

        ant.taskdef(resource: 'org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties',
                classpath: configurations.aspectjTask.asPath)
        ant.iajc(inpath: myInPath,
                source: '1.8',
                target: '1.8',
                destDir: project.sourceSets.main.output.classesDir,
                sourceRoots: mySourceRoots,
                classpath: aopcp)
    }
}
